// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace pg.DarkSky.Wpf.tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class AutomapperFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "AutomapperFeature.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("hu-HU"), "Automapper", "\t      Fejlesztőként szükségem van egy adattranszformációra\r\n\t\t  ami stabilan műk" +
                    "ödik a különböző típusú adatok között", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Automapper")))
            {
                global::pg.DarkSky.Wpf.tests.AutomapperFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Automapper configuration check")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Automapper")]
        public virtual void AutomapperConfigurationCheck()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Automapper configuration check", null, ((string[])(null)));
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
 testRunner.Given("egy felparaméterezett mapper", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Adott ");
#line 7
 testRunner.When("ellenőrzöm a konfigurációt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Ha ");
#line 8
 testRunner.Then("a végeredmény azt jelzi, hogy minden rendben", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Akkor ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("map CurrentDataPoint to ForecastModelDataPoint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Automapper")]
        public virtual void MapCurrentDataPointToForecastModelDataPoint()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("map CurrentDataPoint to ForecastModelDataPoint", null, ((string[])(null)));
#line 10
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
 testRunner.Given("egy felparaméterezett mapper", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Adott ");
#line 12
 testRunner.When("egy CurrentDataPoint példányt transzformálok ForecastModelDataPoint típusra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Ha ");
#line 13
 testRunner.Then("a ForecastDataPoint példány jól van kitöltve", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Akkor ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("map DailyDataPoint to ForecastModelDataPoint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Automapper")]
        public virtual void MapDailyDataPointToForecastModelDataPoint()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("map DailyDataPoint to ForecastModelDataPoint", null, ((string[])(null)));
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
 testRunner.Given("egy felparaméterezett mapper", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Adott ");
#line 17
 testRunner.When("egy DailyDataPoint példányt transzformálok ForecastModelDataPoint típusra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Ha ");
#line 18
 testRunner.Then("a ForecastDataPoint példány jól van kitöltve", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Akkor ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("map ListOfDailyDataPoint to ListOfForecastModelDataPoint")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Automapper")]
        public virtual void MapListOfDailyDataPointToListOfForecastModelDataPoint()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("map ListOfDailyDataPoint to ListOfForecastModelDataPoint", null, ((string[])(null)));
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 21
 testRunner.Given("egy felparaméterezett mapper", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Adott ");
#line 22
 testRunner.When("egy ListOfDailyDataPoint példányt transzformálok ListOfForecastModelDataPoint típ" +
                    "usra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Ha ");
#line 23
 testRunner.Then("a ListOfForecastModelDataPoint példány jól van kitöltve", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Akkor ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("map ApiResult to ForecastModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Automapper")]
        public virtual void MapApiResultToForecastModel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("map ApiResult to ForecastModel", null, ((string[])(null)));
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 26
 testRunner.Given("egy felparaméterezett mapper", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Adott ");
#line 27
 testRunner.When("egy ApiResult példányt transzformálok ForecastModel típusra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Ha ");
#line 28
 testRunner.Then("a ForecastModel példány jól van kitöltve", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Akkor ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("map ForecastModelDataPoint to ForecastViewModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Automapper")]
        public virtual void MapForecastModelDataPointToForecastViewModel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("map ForecastModelDataPoint to ForecastViewModel", null, ((string[])(null)));
#line 30
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 31
 testRunner.Given("egy felparaméterezett mapper", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Adott ");
#line 32
 testRunner.When("egy ForecastModelDataPoint példányt transzformálok ForecastViewModel típusra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Ha ");
#line 33
 testRunner.Then("a ForecastViewModel példány jól van kitöltve", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Akkor ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("map ForecastModel to MainViewModel")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Automapper")]
        public virtual void MapForecastModelToMainViewModel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("map ForecastModel to MainViewModel", null, ((string[])(null)));
#line 35
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 36
 testRunner.Given("egy felparaméterezett mapper", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Adott ");
#line 37
 testRunner.When("egy ForecastModel példányt transzformálok MainViewModel típusra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Ha ");
#line 38
 testRunner.Then("a MainViewModel példány jól van kitöltve", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Akkor ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
